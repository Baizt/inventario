{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/baizt/Documentos/inventario/admin/src/pages/Branches.js\";\nimport React, { Component } from 'react';\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branches: false\n    };\n\n    this.fetch = async e => {\n      try {\n        const branches = await api.branches.getAll();\n        console.log('branches', branches);\n        this.setState({\n          branches\n        });\n      } catch (error) {\n        console.log('Fail getAllBranches', error);\n      }\n    };\n\n    this.handleChange = e => {\n      console.log('handleChange', e.target.dataset.id, e.target.dataset.index);\n      let edited_branch = this.state.branches.filter(branch => {\n        return +branch.id === +e.target.dataset.id ? branch : false;\n      })[0];\n      console.log('edited_branch', edited_branch);\n      edited_branch[e.target.name] = e.target.value;\n      this.setState({\n        branches: [...this.state.branches]\n      });\n      let send_branch_api = {\n        \"branch_address\": edited_branch.address,\n        \"branch_name\": edited_branch.name\n      };\n\n      if (+e.target.dataset.id !== 0) {\n        send_branch_api.branch_id = edited_branch.id;\n        this.save(send_branch_api);\n      } else {\n        this.add(send_branch_api, this.state.branches.length - 1);\n      }\n    };\n\n    this.add = async (send_branch_api, index) => {\n      console.log('Branch', this.state.branches, index, this.state.branches[index]);\n\n      try {\n        await api.branches.set(send_branch_api);\n        this.state.branches[index].id = Date.now();\n        console.log('Branch Setted', this.state.branches);\n      } catch (error) {\n        console.log('Fail setBranch', error);\n      }\n    };\n\n    this.save = async send_branch_api => {\n      try {\n        await api.branches.update(send_branch_api);\n        console.log('Branch Updated');\n      } catch (error) {\n        console.log('Fail UpdateBranch', error);\n      }\n    };\n\n    this.addBranch = e => {\n      this.setState({\n        branches: [...this.state.branches, {\n          \"id\": \"\",\n          \"name\": \"\",\n          \"address\": \"\"\n        }]\n      });\n    };\n\n    this.dropBranch = async e => {\n      try {\n        await api.branches.drop(e.target.dataset.id);\n        let tmp_branches = this.state.branches;\n        tmp_branches.splice(e.target.dataset.index, 1);\n        this.setState({\n          branches: [...tmp_branches]\n        });\n      } catch (error) {\n        console.log('Fail deleteBranch', error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    if (!this.state.branches) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sucursales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: this.state.branches.map((branch, indexBranch) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"6\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Branch, {\n              branch: branch,\n              index: indexBranch,\n              handleChange: this.handleChange,\n              handleDrop: this.dropBranch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 9\n            }, this)\n          }, branch.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: this.addBranch,\n        children: \"Agregar Sucursal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Branches;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/pages/Branches.js"],"names":["React","Component","api","Row","Col","Branch","Loader","Button","Branches","state","branches","fetch","e","getAll","console","log","setState","error","handleChange","target","dataset","id","index","edited_branch","filter","branch","name","value","send_branch_api","address","branch_id","save","add","length","set","Date","now","update","addBranch","dropBranch","drop","tmp_branches","splice","componentDidMount","render","map","indexBranch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component{\n\t\n\tstate = {\n\t\tbranches: false\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetch();\n\t}\n\n\tfetch = async e => {\n\t\ttry {\n\t\t\tconst branches = await api.branches.getAll();\n\t\t\tconsole.log('branches', branches)\n\t\t\tthis.setState({branches});\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail getAllBranches', error)\n\t\t}\n\t}\n\n\thandleChange = e => {\n\t\tconsole.log('handleChange', e.target.dataset.id, e.target.dataset.index)\n\t\tlet edited_branch = this.state.branches.filter(branch => {\n\t\t\treturn +branch.id === +e.target.dataset.id ? branch : false;\n\t\t})[0];\n\n\t\tconsole.log('edited_branch', edited_branch)\n\t\tedited_branch[e.target.name] = e.target.value;\n\n\t\tthis.setState({\n\t\t\tbranches:[\n\t\t\t\t...this.state.branches,\n\t\t\t]\n\t\t});\n\n\t\tlet send_branch_api = {\n\t\t\t\"branch_address\": edited_branch.address,\n\t\t\t\"branch_name\": edited_branch.name,\n\t\t}\n\t\t\n\t\tif(+e.target.dataset.id !== 0){\n\t\t\tsend_branch_api.branch_id = edited_branch.id;\n\t\t\tthis.save(send_branch_api)\n\n\t\t} else{\n\t\t\tthis.add(send_branch_api, this.state.branches.length-1)\n\t\t}\n\t}\n\n\tadd = async (send_branch_api, index) => {\n\t\tconsole.log('Branch', this.state.branches, index, this.state.branches[index])\n\t\ttry {\n\t\t\tawait api.branches.set(send_branch_api);\n\t\t\tthis.state.branches[index].id = Date.now()\n\t\t\tconsole.log('Branch Setted', this.state.branches)\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail setBranch', error)\n\t\t}\n\t}\n\n\tsave = async send_branch_api => {\n\t\ttry {\n\t\t\tawait api.branches.update(send_branch_api);\n\t\t\tconsole.log('Branch Updated')\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail UpdateBranch', error)\n\t\t}\n\t}\n\n\taddBranch = e =>{\n\t\tthis.setState({\n\t\t\tbranches:[\n\t\t\t\t...this.state.branches,\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"address\": \"\",\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}\n\n\tdropBranch = async e =>{\n\t\ttry {\n\t\t\tawait api.branches.drop(e.target.dataset.id);\n\t\t\tlet tmp_branches = this.state.branches;\n\t\t\ttmp_branches.splice(e.target.dataset.index, 1);\n\t\n\t\t\tthis.setState({\n\t\t\t\tbranches:[\n\t\t\t\t\t...tmp_branches\n\t\t\t\t]\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail deleteBranch', error)\n\t\t}\n\t}\n\t\n\trender(){\n\t\tif(!this.state.branches){\n\t\t\treturn(\n\t\t\t\t<Loader/>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<section>\n\t\t\t\t<h1>Sucursales</h1>\n\t\t\t\t<Row>\n\t\t\t\t\t{this.state.branches.map((branch, indexBranch) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Col sm=\"6\" md=\"4\" key={branch.id}>\n\t\t\t\t\t\t\t\t<Branch branch={branch} index={indexBranch} handleChange={this.handleChange} handleDrop={this.dropBranch} />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Row>\n\t\t\t\t<Button variant=\"success\" onClick={this.addBranch}>Agregar Sucursal</Button>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nexport default Branches;"]},"metadata":{},"sourceType":"module"}