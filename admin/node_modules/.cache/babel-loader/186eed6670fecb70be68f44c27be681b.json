{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/baizt/Documentos/inventario/admin/src/pages/Branches.js\";\nimport React, { Component } from 'react';\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branches: false\n    };\n\n    this.fetch = async e => {\n      try {\n        const branches = await api.branches.getAll();\n        console.log('branches', branches);\n        this.setState({\n          branches\n        });\n      } catch (error) {\n        console.log('Fail getAllBranches', error);\n      }\n    };\n\n    this.handleChange = e => {\n      let index_edited = 0;\n      let edited_branch = this.state.branches.filter((branch, index) => {\n        if (branch.id == e.target.dataset.id) {\n          index_edited = index;\n        }\n\n        return branch.id == e.target.dataset.id;\n      })[0];\n      edited_branch[e.target.name] = e.target.value;\n      console.log(edited_branch);\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    if (!this.state.branches) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sucursales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: this.state.branches.map(branch => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"6\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Branch, {\n              branch: branch,\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this)\n          }, branch.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        children: \"Agregar Sucursal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Branches;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/pages/Branches.js"],"names":["React","Component","api","Row","Col","Branch","Loader","Button","Branches","state","branches","fetch","e","getAll","console","log","setState","error","handleChange","index_edited","edited_branch","filter","branch","index","id","target","dataset","name","value","componentDidMount","render","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAgC;AAAA;AAAA;AAAA,SAE/BQ,KAF+B,GAEvB;AACPC,MAAAA,QAAQ,EAAE;AADH,KAFuB;;AAAA,SAU/BC,KAV+B,GAUvB,MAAMC,CAAN,IAAW;AAClB,UAAI;AACH,cAAMF,QAAQ,GAAG,MAAMR,GAAG,CAACQ,QAAJ,CAAaG,MAAb,EAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;AACA,aAAKM,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd;AAEA,OALD,CAKE,OAAOO,KAAP,EAAc;AACfH,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAnC;AACA;AACD,KAnB8B;;AAAA,SAqB/BC,YArB+B,GAqBhBN,CAAC,IAAI;AACnB,UAAIO,YAAY,GAAG,CAAnB;AACA,UAAIC,aAAa,GAAG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,MAApB,CAA2B,CAACC,MAAD,EAASC,KAAT,KAAmB;AACjE,YAAGD,MAAM,CAACE,EAAP,IAAaZ,CAAC,CAACa,MAAF,CAASC,OAAT,CAAiBF,EAAjC,EAAoC;AAAEL,UAAAA,YAAY,GAAGI,KAAf;AAAsB;;AAC5D,eAAOD,MAAM,CAACE,EAAP,IAAaZ,CAAC,CAACa,MAAF,CAASC,OAAT,CAAiBF,EAArC;AACA,OAHmB,EAGjB,CAHiB,CAApB;AAIAJ,MAAAA,aAAa,CAACR,CAAC,CAACa,MAAF,CAASE,IAAV,CAAb,GAA+Bf,CAAC,CAACa,MAAF,CAASG,KAAxC;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACA,KA7B8B;AAAA;;AAM/BS,EAAAA,iBAAiB,GAAE;AAClB,SAAKlB,KAAL;AACA;;AAuBDmB,EAAAA,MAAM,GAAE;AACP,QAAG,CAAC,KAAKrB,KAAL,CAAWC,QAAf,EAAwB;AACvB,0BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD;AAGA;;AACD,wBACC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,GAAD;AAAA,kBACE,KAAKD,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwBT,MAAM,IAAI;AAClC,8BACC,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,GAAf;AAAA,mCACC,QAAC,MAAD;AAAQ,cAAA,MAAM,EAAEA,MAAhB;AAAwB,cAAA,YAAY,EAAE,KAAKJ;AAA3C;AAAA;AAAA;AAAA;AAAA;AADD,aAAwBI,MAAM,CAACE,EAA/B;AAAA;AAAA;AAAA;AAAA,kBADD;AAKA,SANA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eAWC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAeA;;AApD8B;;AAuDhC,eAAehB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component{\n\t\n\tstate = {\n\t\tbranches: false\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetch();\n\t}\n\n\tfetch = async e => {\n\t\ttry {\n\t\t\tconst branches = await api.branches.getAll();\n\t\t\tconsole.log('branches', branches)\n\t\t\tthis.setState({branches});\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail getAllBranches', error)\n\t\t}\n\t}\n\n\thandleChange = e => {\n\t\tlet index_edited = 0;\n\t\tlet edited_branch = this.state.branches.filter((branch, index) => {\n\t\t\tif(branch.id == e.target.dataset.id){ index_edited = index }\n\t\t\treturn branch.id == e.target.dataset.id\n\t\t})[0];\n\t\tedited_branch[e.target.name] = e.target.value;\n\t\tconsole.log(edited_branch)\n\t}\n\t\n\trender(){\n\t\tif(!this.state.branches){\n\t\t\treturn(\n\t\t\t\t<Loader/>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<section>\n\t\t\t\t<h1>Sucursales</h1>\n\t\t\t\t<Row>\n\t\t\t\t\t{this.state.branches.map(branch => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Col sm=\"6\" md=\"4\" key={branch.id}>\n\t\t\t\t\t\t\t\t<Branch branch={branch} handleChange={this.handleChange}/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Row>\n\t\t\t\t<Button variant=\"success\">Agregar Sucursal</Button>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nexport default Branches;"]},"metadata":{},"sourceType":"module"}