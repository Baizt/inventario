{"ast":null,"code":"import Cookies from 'universal-cookie';\nconst BASE_URL = `http://localhost:8001`;\n\nasync function callApi(endpoint, options = {}) {\n  options.headers = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'access-token': getToken()\n  };\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n\n  if (!data.tokenStatus) {\n    window.location.replace(\"/login\");\n    return false;\n  }\n\n  return data.data;\n}\n\nfunction getToken() {\n  const cookies = new Cookies();\n  return cookies.get('adminRef');\n}\n\nconst api = {\n  login: {\n    log(user) {\n      console.log('api.login.log', user);\n      return callApi(`/auth`, {\n        method: 'POST',\n        body: JSON.stringify(user)\n      });\n    }\n\n  },\n  description: {\n    read() {\n      return callApi(`/description`);\n    },\n\n    write(update) {\n      return callApi(`/description`, {\n        method: 'PATCH',\n        body: JSON.stringify(update)\n      });\n    }\n\n  },\n  places: {\n    readAll() {\n      return callApi(`/places`);\n    },\n\n    read(id_place) {\n      return callApi(`/places/${id_place}`);\n    },\n\n    update(update) {\n      return callApi(`/places/${update.id_place}`, {\n        method: 'PATCH',\n        body: JSON.stringify(update)\n      });\n    },\n\n    write(new_place) {\n      return callApi(`/places`, {\n        method: 'POST',\n        body: JSON.stringify(new_place)\n      });\n    },\n\n    delete(id_place) {\n      return callApi(`/places/${id_place}`, {\n        method: 'DELETE'\n      });\n    }\n\n  },\n  users: {\n    readAll() {\n      return callApi(`/users`);\n    },\n\n    read(id_user) {\n      return callApi(`/users/${id_user}`);\n    },\n\n    update(update) {\n      return callApi(`/users/${update.id_user}`, {\n        method: 'PATCH',\n        body: JSON.stringify(update)\n      });\n    },\n\n    write(new_user) {\n      return callApi(`/users`, {\n        method: 'POST',\n        body: JSON.stringify(new_user)\n      });\n    },\n\n    delete(id_user) {\n      return callApi(`/users/${id_user}`, {\n        method: 'DELETE'\n      });\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/callApi.js"],"names":["Cookies","BASE_URL","callApi","endpoint","options","headers","getToken","url","response","fetch","data","json","tokenStatus","window","location","replace","cookies","get","api","login","log","user","console","method","body","JSON","stringify","description","read","write","update","places","readAll","id_place","new_place","delete","users","id_user","new_user"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\nconst BASE_URL = `http://localhost:8001`;\n\nasync function callApi(endpoint, options = {}) {\n\toptions.headers = {\n\t  'Content-Type':'application/json',\n\t  'Accept':'application/json',\n\t  'access-token': getToken(),\n\t};\n\tconst url = BASE_URL + endpoint;\n\tconst response = await fetch(url, options);\n\tconst data = await response.json();\n\n\tif(!data.tokenStatus){\n\t\twindow.location.replace(\"/login\");\n\t\treturn false;\n\t}\n\t\n\treturn data.data;\n }\n\nfunction getToken() {\n\t const cookies = new Cookies();\n\t return cookies.get('adminRef');\n }\n\nconst api = {\n\tlogin:{\n\t\tlog(user){\n\t\t\tconsole.log('api.login.log', user)\n\t\t\treturn callApi(`/auth`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(user),\n\t\t\t});\n\t\t},\n\t},\n\tdescription: {\n\t\tread(){\n\t\t\treturn callApi(`/description`);\n\t\t},\n\t\twrite(update){\n\t\t\treturn callApi(`/description`, {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(update),\n\t\t\t});\n\t\t},\n\t},\n\tplaces: {\n\t\treadAll(){\n\t\t\treturn callApi(`/places`);\n\t\t},\n\t\tread(id_place){\n\t\t\treturn callApi(`/places/${id_place}`);\n\t\t},\n\t\tupdate(update){\n\t\t\treturn callApi(`/places/${update.id_place}`, {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(update),\n\t\t\t});\n\t\t},\n\t\twrite(new_place){\n\t\t\treturn callApi(`/places`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(new_place),\n\t\t\t});\n\t\t},\n\t\tdelete(id_place){\n\t\t\treturn callApi(`/places/${id_place}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t});\n\t\t},\n\t},\n\tusers: {\n\t\treadAll(){\n\t\t\treturn callApi(`/users`);\n\t\t},\n\t\tread(id_user){\n\t\t\treturn callApi(`/users/${id_user}`);\n\t\t},\n\t\tupdate(update){\n\t\t\treturn callApi(`/users/${update.id_user}`, {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(update),\n\t\t\t});\n\t\t},\n\t\twrite(new_user){\n\t\t\treturn callApi(`/users`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(new_user),\n\t\t\t});\n\t\t},\n\t\tdelete(id_user){\n\t\t\treturn callApi(`/users/${id_user}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t});\n\t\t},\n\t},\n};\n\nexport default api;"]},"metadata":{},"sourceType":"module"}