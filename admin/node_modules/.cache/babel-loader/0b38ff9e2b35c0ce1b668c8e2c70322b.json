{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/baizt/Documentos/inventario/admin/src/pages/ItemsBranch.js\";\nimport React, { Component } from 'react';\nimport api from '../callApi';\nimport Loader from '../components/Loader';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass ItemsBranch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branch: false,\n      items: false,\n      allItems: false\n    };\n\n    this.fetchData = async e => {\n      console.log(this.props.match.params.branchId);\n\n      try {\n        const branch = await api.branches.get(this.props.match.params.branchId);\n        const items = await api.branchItems.getByBranch(this.props.match.params.branchId);\n        const allItems = await api.items.getAll();\n        console.log('branch', branch);\n        console.log('items', items);\n        console.log('allItems', allItems);\n        this.setState({\n          branch,\n          items,\n          allItems\n        });\n      } catch (error) {\n        console.log('fail getBranch', error);\n      }\n    };\n\n    this.handleChange = e => {\n      let index_edited = 0;\n      let edited_item = this.state.items.filter((item, index) => {\n        if (item.id_item == e.target.dataset.id) {\n          index_edited = index;\n        }\n\n        return item.id_item == e.target.dataset.id;\n      })[0];\n      console.log('edited_item', edited_item);\n      edited_item[e.target.name] = e.target.value;\n      this.setState({\n        items: [...this.state.items]\n      });\n      const send_item_api = {\n        \"item_id\": edited_item.id_item,\n        \"branch_id\": this.state.branch.id,\n        \"num\": edited_item.lot\n      };\n      console.log('send_item_api', send_item_api);\n      this.save(send_item_api);\n    };\n\n    this.save = async send_item_api => {\n      try {\n        await api.branchItems.set(send_item_api);\n        console.log('Item Updated');\n      } catch (error) {\n        console.log('Fail setBranchItem', error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  addItem() {\n    this.setState({\n      items: [...this.state.items, {\n        barcode: \"\",\n        name: \"\",\n        price: \"\"\n      }]\n    });\n  }\n\n  render() {\n    if (!this.state.branch || !this.state.items) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          variant: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: \"C\\xF3digo de Barras\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: \"Cantidad en Sucursal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: \"Precio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), this.state.items.map(item => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            action: true,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: item.item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: item.barcode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Cantidad en Sucursal\",\n                  value: item.lot,\n                  name: \"lot\",\n                  \"data-id\": item.id_item,\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"button\",\n        onClick: addItem,\n        className: \"mt-4\",\n        children: \"Agregar Producto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default ItemsBranch;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/pages/ItemsBranch.js"],"names":["React","Component","api","Loader","Link","Row","Col","Form","Button","ListGroup","ItemsBranch","state","branch","items","allItems","fetchData","e","console","log","props","match","params","branchId","branches","get","branchItems","getByBranch","getAll","setState","error","handleChange","index_edited","edited_item","filter","item","index","id_item","target","dataset","id","name","value","send_item_api","lot","save","set","componentDidMount","addItem","barcode","price","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport api from '../callApi';\nimport Loader from '../components/Loader';\nimport {Link} from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass ItemsBranch extends Component{\n\tstate = {\n\t\tbranch:false,\n\t\titems:false,\n\t\tallItems:false\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetchData()\n\t}\n\n\tfetchData = async e => {\n\t\tconsole.log(this.props.match.params.branchId)\n\t\ttry {\n\t\t\tconst branch = await api.branches.get(this.props.match.params.branchId)\n\t\t\tconst items = await api.branchItems.getByBranch(this.props.match.params.branchId)\n\t\t\tconst allItems = await api.items.getAll()\n\t\t\tconsole.log('branch', branch)\n\t\t\tconsole.log('items', items)\n\t\t\tconsole.log('allItems', allItems)\n\t\t\tthis.setState({branch, items, allItems})\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('fail getBranch', error)\n\t\t}\n\t}\n\t\n\thandleChange = e => {\n\t\tlet index_edited = 0;\n\t\tlet edited_item = this.state.items.filter((item, index) => {\n\t\t\tif(item.id_item == e.target.dataset.id){ index_edited = index; }\n\t\t\treturn item.id_item == e.target.dataset.id\n\t\t})[0];\n\n\t\tconsole.log('edited_item', edited_item)\n\t\tedited_item[e.target.name] = e.target.value;\n\n\t\tthis.setState({\n\t\t\titems:[\n\t\t\t\t...this.state.items,\n\t\t\t]\n\t\t});\n\n\t\tconst send_item_api = {\n\t\t\t\"item_id\": edited_item.id_item,\n\t\t\t\"branch_id\": this.state.branch.id,\n\t\t\t\"num\": edited_item.lot,\n\t\t}\n\t\t\n\t\tconsole.log('send_item_api', send_item_api)\n\t\tthis.save(send_item_api)\n\t}\n\n\tsave = async send_item_api => {\n\t\ttry {\n\t\t\tawait api.branchItems.set(send_item_api);\n\t\t\tconsole.log('Item Updated')\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail setBranchItem', error)\n\t\t}\n\t}\n\n\taddItem(){\n\n\t\tthis.setState({\n\t\t\titems:[\n\t\t\t\t...this.state.items,\n\t\t\t\t{\n\t\t\t\t\tbarcode: \"\",\n\t\t\t\t\tname: \"\",\n\t\t\t\t\tprice: \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trender(){\n\t\tif(!this.state.branch || !this.state.items){\n\t\t\treturn(\n\t\t\t\t<Loader/>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ListGroup defaultActiveKey=\"0\">\n\t\t\t\t\t<ListGroup.Item variant=\"primary\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\tNombre\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\tCódigo de Barras\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\tCantidad en Sucursal\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\tPrecio\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t{this.state.items.map(item => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<ListGroup.Item key={item.id} action >\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t{item.item}\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t{item.barcode}\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Cantidad en Sucursal\" value={item.lot} name=\"lot\" data-id={item.id_item} onChange={this.handleChange} />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t${item.price}\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ListGroup>\n\t\t\t\t<Button variant=\"success\" type=\"button\" onClick={addItem} className=\"mt-4\" >\n\t\t\t\t\tAgregar Producto\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ItemsBranch"]},"metadata":{},"sourceType":"module"}