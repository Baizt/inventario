{"ast":null,"code":"import Cookies from 'universal-cookie';\nconst BASE_URL = `http://localhost:8001`;\n\nasync function callApi(endpoint, options = {}, single_answer) {\n  options.headers = {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'access-token': getToken()\n  };\n  const url = BASE_URL + endpoint;\n  const response = await fetch(url, options);\n  const data = await response.json();\n\n  if (!data.tokenStatus) {\n    window.location.replace(\"/login\");\n    return false;\n  }\n\n  if (single_answer) {\n    return data.data[0];\n  }\n\n  return data.data;\n}\n\nfunction getToken() {\n  const cookies = new Cookies();\n  return cookies.get('adminRef');\n}\n\nconst api = {\n  login: {\n    log(user) {\n      console.log('api.login.log', user);\n      return callApi(`/auth`, {\n        method: 'POST',\n        body: JSON.stringify(user)\n      });\n    }\n\n  },\n  branches: {\n    getAll() {\n      return callApi(`/branches`);\n    },\n\n    get(id_place) {\n      return callApi(`/branches/${id_place}`);\n    },\n\n    update(update) {\n      return callApi(`/branches/${update.id_place}`, {\n        method: 'PATCH',\n        body: JSON.stringify(update)\n      });\n    },\n\n    set(new_place) {\n      return callApi(`/branches`, {\n        method: 'POST',\n        body: JSON.stringify(new_place)\n      });\n    },\n\n    drop(id_place) {\n      return callApi(`/branches/${id_place}`, {\n        method: 'DELETE'\n      });\n    }\n\n  },\n  items: {\n    getAll() {\n      return callApi(`/items`);\n    },\n\n    get(id_item) {\n      return callApi(`/items/${id_item}`, {}, true);\n    },\n\n    update(update) {\n      return callApi(`/items/${update.id_item}`, {\n        method: 'PATCH',\n        body: JSON.stringify(update)\n      });\n    },\n\n    set(new_item) {\n      return callApi(`/items`, {\n        method: 'POST',\n        body: JSON.stringify(new_place)\n      });\n    },\n\n    drop(id_place) {\n      return callApi(`/items/${new_item}`, {\n        method: 'DELETE'\n      });\n    }\n\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/callApi.js"],"names":["Cookies","BASE_URL","callApi","endpoint","options","single_answer","headers","getToken","url","response","fetch","data","json","tokenStatus","window","location","replace","cookies","get","api","login","log","user","console","method","body","JSON","stringify","branches","getAll","id_place","update","set","new_place","drop","items","id_item","new_item"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\nconst BASE_URL = `http://localhost:8001`;\n\nasync function callApi(endpoint, options = {}, single_answer) {\n\toptions.headers = {\n\t  'Content-Type':'application/json',\n\t  'Accept':'application/json',\n\t  'access-token': getToken(),\n\t};\n\tconst url = BASE_URL + endpoint;\n\tconst response = await fetch(url, options);\n\tconst data = await response.json();\n\n\tif(!data.tokenStatus){\n\t\twindow.location.replace(\"/login\");\n\t\treturn false;\n\t}\n\n\tif(single_answer){\n\t\treturn data.data[0];\n\t}\n\t\n\treturn data.data;\n }\n\nfunction getToken() {\n\t const cookies = new Cookies();\n\t return cookies.get('adminRef');\n }\n\nconst api = {\n\tlogin:{\n\t\tlog(user){\n\t\t\tconsole.log('api.login.log', user)\n\t\t\treturn callApi(`/auth`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(user),\n\t\t\t});\n\t\t},\n\t},\n\tbranches: {\n\t\tgetAll(){\n\t\t\treturn callApi(`/branches`);\n\t\t},\n\t\tget(id_place){\n\t\t\treturn callApi(`/branches/${id_place}`);\n\t\t},\n\t\tupdate(update){\n\t\t\treturn callApi(`/branches/${update.id_place}`, {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(update),\n\t\t\t});\n\t\t},\n\t\tset(new_place){\n\t\t\treturn callApi(`/branches`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(new_place),\n\t\t\t});\n\t\t},\n\t\tdrop(id_place){\n\t\t\treturn callApi(`/branches/${id_place}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t});\n\t\t},\n\t},\n\titems: {\n\t\tgetAll(){\n\t\t\treturn callApi(`/items`);\n\t\t},\n\t\tget(id_item){\n\t\t\treturn callApi(`/items/${id_item}`, {}, true);\n\t\t},\n\t\tupdate(update){\n\t\t\treturn callApi(`/items/${update.id_item}`, {\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tbody: JSON.stringify(update),\n\t\t\t});\n\t\t},\n\t\tset(new_item){\n\t\t\treturn callApi(`/items`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify(new_place),\n\t\t\t});\n\t\t},\n\t\tdrop(id_place){\n\t\t\treturn callApi(`/items/${new_item}`, {\n\t\t\t\tmethod: 'DELETE',\n\t\t\t});\n\t\t},\n\t},\n};\n\nexport default api;"]},"metadata":{},"sourceType":"module"}