{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/baizt/Documentos/inventario/admin/src/pages/Branches.js\";\nimport React, { Component } from 'react';\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branches: false\n    };\n\n    this.fetch = async e => {\n      try {\n        const branches = await api.branches.getAll();\n        console.log('branches', branches);\n        this.setState({\n          branches\n        });\n      } catch (error) {\n        console.log('Fail getAllBranches', error);\n      }\n    };\n\n    this.handleChange = e => {\n      console.log('handleChange', e.target.dataset.id, this.state.branches, typeof this.state.branches);\n      let edited_branch = this.state.branches.filter(branch => {\n        console.log('branch', branch, branch.id, e.target.dataset.id, branch.id === e.target.dataset.id);\n        return branch.id == e.target.dataset.id ? branch : false;\n      });\n      console.log('edited_branch', edited_branch);\n      edited_branch[e.target.name] = e.target.value;\n      this.setState({\n        branches: [...this.state.branches]\n      });\n      let send_branch_api = {\n        \"branch_address\": edited_branch.address,\n        \"branch_name\": edited_branch.name\n      }; // if(+e.target.dataset.id !== 0){\n      // \tsend_branch_api.branch_id = edited_branch.id;\n      // \tthis.save(send_branch_api)\n      // } else{\n      // \tthis.add(send_branch_api)\n      // }\n    };\n\n    this.add = async send_branch_api => {\n      try {\n        await api.branches.set(send_branch_api);\n        console.log('Branch Setted');\n      } catch (error) {\n        console.log('Fail setBranch', error);\n      }\n    };\n\n    this.save = async send_branch_api => {\n      try {\n        await api.branches.update(send_branch_api);\n        console.log('Branch Updated');\n      } catch (error) {\n        console.log('Fail UpdateBranch', error);\n      }\n    };\n\n    this.addBranch = e => {\n      this.setState({\n        branches: [...this.state.branches, {\n          \"id\": \"\",\n          \"name\": \"\",\n          \"address\": \"\"\n        }]\n      });\n    };\n\n    this.dropBranch = async e => {\n      try {\n        await api.branches.drop(e.target.dataset.id);\n        let tmp_branches = this.state.branches;\n        tmp_branches.splice(e.target.dataset.index, 1);\n        this.setState({\n          branches: [...tmp_branches]\n        });\n      } catch (error) {\n        console.log('Fail deleteBranch', error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    if (!this.state.branches) {\n      return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sucursales\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: this.state.branches.map((branch, indexBranch) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"6\",\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Branch, {\n              branch: branch,\n              index: indexBranch,\n              handleChange: this.handleChange,\n              handleDrop: this.dropBranch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this)\n          }, branch.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: this.addBranch,\n        children: \"Agregar Sucursal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Branches;","map":{"version":3,"sources":["/home/baizt/Documentos/inventario/admin/src/pages/Branches.js"],"names":["React","Component","api","Row","Col","Branch","Loader","Button","Branches","state","branches","fetch","e","getAll","console","log","setState","error","handleChange","target","dataset","id","edited_branch","filter","branch","name","value","send_branch_api","address","add","set","save","update","addBranch","dropBranch","drop","tmp_branches","splice","index","componentDidMount","render","map","indexBranch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport api from '../callApi';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Branch from '../components/Branch';\nimport Loader from '../components/Loader';\nimport Button from 'react-bootstrap/Button';\n\nclass Branches extends Component{\n\t\n\tstate = {\n\t\tbranches: false\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetch();\n\t}\n\n\tfetch = async e => {\n\t\ttry {\n\t\t\tconst branches = await api.branches.getAll();\n\t\t\tconsole.log('branches', branches)\n\t\t\tthis.setState({branches});\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail getAllBranches', error)\n\t\t}\n\t}\n\n\thandleChange = e => {\n\t\tconsole.log('handleChange', e.target.dataset.id, this.state.branches, typeof this.state.branches)\n\t\tlet edited_branch = this.state.branches.filter(branch => {\n\t\t\tconsole.log('branch', branch, branch.id, e.target.dataset.id, branch.id === e.target.dataset.id)\n\t\t\treturn branch.id == e.target.dataset.id ? branch : false;\n\t\t});\n\n\t\tconsole.log('edited_branch', edited_branch)\n\t\tedited_branch[e.target.name] = e.target.value;\n\n\t\tthis.setState({\n\t\t\tbranches:[\n\t\t\t\t...this.state.branches,\n\t\t\t]\n\t\t});\n\n\t\tlet send_branch_api = {\n\t\t\t\"branch_address\": edited_branch.address,\n\t\t\t\"branch_name\": edited_branch.name,\n\t\t}\n\t\t\n\t\t// if(+e.target.dataset.id !== 0){\n\t\t// \tsend_branch_api.branch_id = edited_branch.id;\n\t\t// \tthis.save(send_branch_api)\n\n\t\t// } else{\n\t\t// \tthis.add(send_branch_api)\n\t\t// }\n\t}\n\n\tadd = async send_branch_api => {\n\t\ttry {\n\t\t\tawait api.branches.set(send_branch_api);\n\t\t\tconsole.log('Branch Setted')\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail setBranch', error)\n\t\t}\n\t}\n\n\tsave = async send_branch_api => {\n\t\ttry {\n\t\t\tawait api.branches.update(send_branch_api);\n\t\t\tconsole.log('Branch Updated')\n\t\t\t\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail UpdateBranch', error)\n\t\t}\n\t}\n\n\taddBranch = e =>{\n\t\tthis.setState({\n\t\t\tbranches:[\n\t\t\t\t...this.state.branches,\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"\",\n\t\t\t\t\t\"name\": \"\",\n\t\t\t\t\t\"address\": \"\",\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t}\n\n\tdropBranch = async e =>{\n\t\ttry {\n\t\t\tawait api.branches.drop(e.target.dataset.id);\n\t\t\tlet tmp_branches = this.state.branches;\n\t\t\ttmp_branches.splice(e.target.dataset.index, 1);\n\t\n\t\t\tthis.setState({\n\t\t\t\tbranches:[\n\t\t\t\t\t...tmp_branches\n\t\t\t\t]\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('Fail deleteBranch', error)\n\t\t}\n\t}\n\t\n\trender(){\n\t\tif(!this.state.branches){\n\t\t\treturn(\n\t\t\t\t<Loader/>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<section>\n\t\t\t\t<h1>Sucursales</h1>\n\t\t\t\t<Row>\n\t\t\t\t\t{this.state.branches.map((branch, indexBranch) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Col sm=\"6\" md=\"4\" key={branch.id}>\n\t\t\t\t\t\t\t\t<Branch branch={branch} index={indexBranch} handleChange={this.handleChange} handleDrop={this.dropBranch} />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Row>\n\t\t\t\t<Button variant=\"success\" onClick={this.addBranch}>Agregar Sucursal</Button>\n\t\t\t</section>\n\t\t)\n\t}\n}\n\nexport default Branches;"]},"metadata":{},"sourceType":"module"}